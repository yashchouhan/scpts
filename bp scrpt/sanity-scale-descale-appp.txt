#!/bin/bash -ex

API_ENDPOINT=https://api.sys.test.cfdev.canopy-cloud.com
CF_ADMIN_USER=admin
CF_ADMIN_PASSWORD=DipfopOddEpsUlsEerfOavwoHenIqu
CF_APP_DOMAIN=apps.test.cfdev.canopy-cloud.com
CF_SYS_DOMAIN=sys.test.cfdev.canopy-cloud.com

# Below Api Endpoint are need for CF Login Method
PREPROD_API_ENDPOINT=https://api.sys.preprod.cfdev.canopy-cloud.com
PROD_API_ENDPOINT=https://api.sys.eu01.cf.canopy-cloud.com



r=$RANDOM

#To Print Current Date and Time
now="$(date)"
printf "Current date and time %s\n" "$now"


Cf_Login()
{
 if [ "${API_ENDPOINT}" == "${PROD_API_ENDPOINT}" ]; then
   cf api $API_ENDPOINT
   cf auth $1 $2
 elif [ "${API_ENDPOINT}" == "${PREPROD_API_ENDPOINT}" ]; then
   cf api $API_ENDPOINT
   cf auth $1 $2
 else
   cf api --skip-ssl-validation $API_ENDPOINT
   cf auth $1 $2
 fi
}

Scaling_And_Descaling_Of_MySql_App() {

  cd oscf-manifest-stubs/ci/smoketests/mysql
  r=$RANDOM
  
  APP_NAME="mysql-app-$r".
  SERVICE_NAME="mysql-service-diego"
  
  echo "Pushing MySql sample app on Diego"
  echo "Using RubyBuildpack "
  
  cf push $APP_NAME --no-start
  cf marketplace | egrep "*mysql"
  res=$?

  if [ $res -eq 0 ]; then
  echo "Creating Mysql Service Instance"
  cf create-service p-mysql default $SERVICE_NAME
  cf bind-service $APP_NAME $SERVICE_NAME
  else
  echo "MySQL service not found in marketplace."
  exit 1
  fi
  cf push $APP_NAME --no-start
  cf enable-diego $APP_NAME
  cf start $APP_NAME

  APP_URL="http://$APP_NAME.$CF_APP_DOMAIN"
#  echo "App Url=$APP_URL"
  EXIT_STATUS=0

  login_test=`curl $APP_URL`
  create_table_test=`curl $APP_URL/create-table-test/Test`
  insert_test=`curl $APP_URL/insert-test/Test`

  echo "Curl Output- $login_test"

  if [ "$login_test" != "ok" ]; then
    echo "Failed to login to MySQL service"
    EXIT_STATUS=1
  elif [ "$create_table_test" != "ok" ]; then
    echo "Failed to create table in the DB."
    EXIT_STATUS=1
  elif [ "$insert_test" != "ok" ]; then
    echo "Failed to insert entry into table in the DB."
    EXIT_STATUS=1
  else
    echo "All test suites passed."
  fi

  cf diego-apps
  cf scale $APP_NAME -k 1G -i 3 -m 2G -f
  cf scale $APP_NAME -k 512m -i 2 -m 1G -f
  cf app $APP_NAME
  
  APP_NAME_DEA="mysql-DEA-app-$r"
  SERVICE_NAME_DEA="mysql-service-dea"
  
  echo "Pushing MySql sample app on DEA"
  cf push $APP_NAME_DEA --no-start
  echo "Pushing MySql sample app on DEA"
  echo "Using RubyBuildpack "
  cf marketplace | egrep "*mysql"
  res=$?
  if [ $res -eq 0 ]; then
  echo "Creating Mysql Service Instance"
  cf create-service p-mysql default $SERVICE_NAME
  cf bind-service $APP_NAME_DEA $SERVICE_NAME_DEA
  else
  echo "MySQL service not found in marketplace."
  exit 1
  fi
 
  cf disable-diego $APP_NAME_DEA
  cf start $APP_NAME_DEA
  cf dea-apps

}

Push_Java_Buildpack_App() {
  
  cd oscf-manifest-stubs/ci/smoketests/java

  APP_NAME="java-app-$r"
  echo "Java Buildpack "
  cf buildpacks | egrep "java_buildpack"
  res=$?

  if [ $res -eq 0 ]; then
  echo "Java buildpack found in cf buildpacks"
  else
  echo "Java buildpack not found in CF buildpacks."
  exit 1
  fi

  cf push $APP_NAME -b java_buildpack -p sample.war --no-start
  cf enable-diego $APP_NAME
  cf start $APP_NAME
  cf diego-apps

  APP_URL="http://$APP_NAME.$CF_APP_DOMAIN"
  curl $APP_URL

  APP_NAME_DEA="java-DEA-app-$r"
  echo "Pushing Java app on DEA"
  cf push $APP_NAME_DEA --no-start
  cf disable-diego $APP_NAME_DEA
  cf start $APP_NAME_DEA
  cf dea-apps

  cf apps
  cf services
  EXIT_STATUS=0
  cf delete $APP_NAME -r -f
  cf delete-orphaned-routes -f
  
}

Cleanup() {

  cf unbind-service $APP_NAME $SERVICE_NAME
  cf delete $APP_NAME -r -f
  cf delete-service $SERVICE_NAME -f
  
  cf unbind-service $APP_NAME_DEA $SERVICE_NAME_DEA
  cf delete $APP_NAME_DEA -r -f
  cf delete-service $SERVICE_NAME_DEA -f

}



#Main file

   Cf_Login $CF_ADMIN_USER $CF_ADMIN_PASSWORD 
   cf target -o oscf-sys -s testing
   Scaling_And_Descaling_Of_MySql_App
   Cleanup
  exit $EXIT_STATUS
  
  
  
  
  
  ---------------
  
    cd oscf-manifest-stubs/ci/smoketests/mysql
  r=$RANDOM
  APP_NAME="mysql-smoketest-app-$r"

  echo "Pushing MySql sample app on Diego"
  cf push $APP_NAME --no-start
  cf enable-diego $APP_NAME
  cf start $APP_NAME
  cf diego-apps
  cf scale $APP_NAME -k 1G -i 3 -m 512m -f
  cf scale $APP_NAME -k 512m -i 2 -m 1G -f
  cf app $APP_NAME

  APP_NAME_DEA="mysql-DEA-app-$r"
  echo "Pushing MySql sample app on DEA"
  cf push $APP_NAME_DEA --no-start
  cf disable-diego $APP_NAME_DEA
  cf start $APP_NAME_DEA
  cf dea-apps

